# Makefile.in generated by automake 1.13.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = ADPCM$(EXEEXT) AES$(EXEEXT) ALAC$(EXEEXT) \
	ChannelMatrix$(EXEEXT) Error$(EXEEXT) FloatToInt$(EXEEXT) \
	Instrument$(EXEEXT) IntToFloat$(EXEEXT) \
	InvalidCompressionFormat$(EXEEXT) InvalidSampleFormat$(EXEEXT) \
	Large$(EXEEXT) Loop$(EXEEXT) Marker$(EXEEXT) \
	Miscellaneous$(EXEEXT) NeXT$(EXEEXT) PCMData$(EXEEXT) \
	PCMMapping$(EXEEXT) Pipe$(EXEEXT) Query$(EXEEXT) \
	SampleFormat$(EXEEXT) Seek$(EXEEXT) Sign$(EXEEXT) \
	VirtualFile$(EXEEXT) floatto24$(EXEEXT) query2$(EXEEXT) \
	sixteen-to-eight$(EXEEXT) testchannelmatrix$(EXEEXT) \
	testdouble$(EXEEXT) testfloat$(EXEEXT) testmarkers$(EXEEXT) \
	twentyfour$(EXEEXT) twentyfour2$(EXEEXT) writealaw$(EXEEXT) \
	writeraw$(EXEEXT) writeulaw$(EXEEXT) $(am__EXEEXT_1)
@ENABLE_FLAC_TRUE@am__append_1 = FLAC
check_PROGRAMS = $(am__EXEEXT_2) instparamtest$(EXEEXT) \
	instparamwrite$(EXEEXT) printmarkers$(EXEEXT) \
	testaupv$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@ENABLE_FLAC_TRUE@am__EXEEXT_1 = FLAC$(EXEEXT)
am__EXEEXT_2 = ADPCM$(EXEEXT) AES$(EXEEXT) ALAC$(EXEEXT) \
	ChannelMatrix$(EXEEXT) Error$(EXEEXT) FloatToInt$(EXEEXT) \
	Instrument$(EXEEXT) IntToFloat$(EXEEXT) \
	InvalidCompressionFormat$(EXEEXT) InvalidSampleFormat$(EXEEXT) \
	Large$(EXEEXT) Loop$(EXEEXT) Marker$(EXEEXT) \
	Miscellaneous$(EXEEXT) NeXT$(EXEEXT) PCMData$(EXEEXT) \
	PCMMapping$(EXEEXT) Pipe$(EXEEXT) Query$(EXEEXT) \
	SampleFormat$(EXEEXT) Seek$(EXEEXT) Sign$(EXEEXT) \
	VirtualFile$(EXEEXT) floatto24$(EXEEXT) query2$(EXEEXT) \
	sixteen-to-eight$(EXEEXT) testchannelmatrix$(EXEEXT) \
	testdouble$(EXEEXT) testfloat$(EXEEXT) testmarkers$(EXEEXT) \
	twentyfour$(EXEEXT) twentyfour2$(EXEEXT) writealaw$(EXEEXT) \
	writeraw$(EXEEXT) writeulaw$(EXEEXT) $(am__EXEEXT_1)
am_ADPCM_OBJECTS = ADPCM.$(OBJEXT) TestUtilities.$(OBJEXT)
ADPCM_OBJECTS = $(am_ADPCM_OBJECTS)
ADPCM_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_AES_OBJECTS = AES.$(OBJEXT) TestUtilities.$(OBJEXT)
AES_OBJECTS = $(am_AES_OBJECTS)
AES_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_ALAC_OBJECTS = ALAC.$(OBJEXT) TestUtilities.$(OBJEXT)
ALAC_OBJECTS = $(am_ALAC_OBJECTS)
ALAC_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_ChannelMatrix_OBJECTS = ChannelMatrix.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
ChannelMatrix_OBJECTS = $(am_ChannelMatrix_OBJECTS)
ChannelMatrix_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Error_OBJECTS = Error.$(OBJEXT) TestUtilities.$(OBJEXT)
Error_OBJECTS = $(am_Error_OBJECTS)
Error_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_FLAC_OBJECTS = FLAC.$(OBJEXT) TestUtilities.$(OBJEXT)
FLAC_OBJECTS = $(am_FLAC_OBJECTS)
FLAC_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_FloatToInt_OBJECTS = FloatToInt.$(OBJEXT) TestUtilities.$(OBJEXT)
FloatToInt_OBJECTS = $(am_FloatToInt_OBJECTS)
FloatToInt_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Instrument_OBJECTS = Instrument.$(OBJEXT) TestUtilities.$(OBJEXT)
Instrument_OBJECTS = $(am_Instrument_OBJECTS)
Instrument_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_IntToFloat_OBJECTS = IntToFloat.$(OBJEXT) TestUtilities.$(OBJEXT)
IntToFloat_OBJECTS = $(am_IntToFloat_OBJECTS)
IntToFloat_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_InvalidCompressionFormat_OBJECTS =  \
	InvalidCompressionFormat.$(OBJEXT) TestUtilities.$(OBJEXT)
InvalidCompressionFormat_OBJECTS =  \
	$(am_InvalidCompressionFormat_OBJECTS)
InvalidCompressionFormat_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_InvalidSampleFormat_OBJECTS = InvalidSampleFormat.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
InvalidSampleFormat_OBJECTS = $(am_InvalidSampleFormat_OBJECTS)
InvalidSampleFormat_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Large_OBJECTS = Large.$(OBJEXT) TestUtilities.$(OBJEXT)
Large_OBJECTS = $(am_Large_OBJECTS)
Large_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Loop_OBJECTS = Loop.$(OBJEXT) TestUtilities.$(OBJEXT)
Loop_OBJECTS = $(am_Loop_OBJECTS)
Loop_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Marker_OBJECTS = Marker.$(OBJEXT) TestUtilities.$(OBJEXT)
Marker_OBJECTS = $(am_Marker_OBJECTS)
Marker_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Miscellaneous_OBJECTS = Miscellaneous.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
Miscellaneous_OBJECTS = $(am_Miscellaneous_OBJECTS)
Miscellaneous_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_NeXT_OBJECTS = NeXT.$(OBJEXT) TestUtilities.$(OBJEXT)
NeXT_OBJECTS = $(am_NeXT_OBJECTS)
NeXT_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_PCMData_OBJECTS = PCMData.$(OBJEXT) TestUtilities.$(OBJEXT)
PCMData_OBJECTS = $(am_PCMData_OBJECTS)
PCMData_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_PCMMapping_OBJECTS = PCMMapping.$(OBJEXT) TestUtilities.$(OBJEXT)
PCMMapping_OBJECTS = $(am_PCMMapping_OBJECTS)
PCMMapping_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Pipe_OBJECTS = Pipe.$(OBJEXT) TestUtilities.$(OBJEXT)
Pipe_OBJECTS = $(am_Pipe_OBJECTS)
Pipe_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Query_OBJECTS = Query.$(OBJEXT) TestUtilities.$(OBJEXT)
Query_OBJECTS = $(am_Query_OBJECTS)
Query_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_SampleFormat_OBJECTS = SampleFormat.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
SampleFormat_OBJECTS = $(am_SampleFormat_OBJECTS)
SampleFormat_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Seek_OBJECTS = Seek.$(OBJEXT) TestUtilities.$(OBJEXT)
Seek_OBJECTS = $(am_Seek_OBJECTS)
Seek_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_Sign_OBJECTS = Sign.$(OBJEXT) TestUtilities.$(OBJEXT)
Sign_OBJECTS = $(am_Sign_OBJECTS)
Sign_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_VirtualFile_OBJECTS = VirtualFile.$(OBJEXT) TestUtilities.$(OBJEXT)
VirtualFile_OBJECTS = $(am_VirtualFile_OBJECTS)
VirtualFile_DEPENDENCIES = $(LIBGTEST) $(LIBAUDIOFILE)
am_floatto24_OBJECTS = floatto24.$(OBJEXT) TestUtilities.$(OBJEXT)
floatto24_OBJECTS = $(am_floatto24_OBJECTS)
floatto24_LDADD = $(LDADD)
floatto24_DEPENDENCIES = $(LIBAUDIOFILE)
instparamtest_SOURCES = instparamtest.c
instparamtest_OBJECTS = instparamtest.$(OBJEXT)
instparamtest_LDADD = $(LDADD)
instparamtest_DEPENDENCIES = $(LIBAUDIOFILE)
instparamwrite_SOURCES = instparamwrite.c
instparamwrite_OBJECTS = instparamwrite.$(OBJEXT)
instparamwrite_LDADD = $(LDADD)
instparamwrite_DEPENDENCIES = $(LIBAUDIOFILE)
am_printmarkers_OBJECTS = printmarkers.$(OBJEXT)
printmarkers_OBJECTS = $(am_printmarkers_OBJECTS)
printmarkers_DEPENDENCIES = $(LIBAUDIOFILE)
query2_SOURCES = query2.c
query2_OBJECTS = query2.$(OBJEXT)
query2_LDADD = $(LDADD)
query2_DEPENDENCIES = $(LIBAUDIOFILE)
am_sixteen_to_eight_OBJECTS = sixteen-to-eight.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
sixteen_to_eight_OBJECTS = $(am_sixteen_to_eight_OBJECTS)
sixteen_to_eight_LDADD = $(LDADD)
sixteen_to_eight_DEPENDENCIES = $(LIBAUDIOFILE)
testaupv_SOURCES = testaupv.c
testaupv_OBJECTS = testaupv.$(OBJEXT)
testaupv_LDADD = $(LDADD)
testaupv_DEPENDENCIES = $(LIBAUDIOFILE)
am_testchannelmatrix_OBJECTS = testchannelmatrix.$(OBJEXT) \
	TestUtilities.$(OBJEXT)
testchannelmatrix_OBJECTS = $(am_testchannelmatrix_OBJECTS)
testchannelmatrix_LDADD = $(LDADD)
testchannelmatrix_DEPENDENCIES = $(LIBAUDIOFILE)
am_testdouble_OBJECTS = testdouble.$(OBJEXT) TestUtilities.$(OBJEXT)
testdouble_OBJECTS = $(am_testdouble_OBJECTS)
testdouble_LDADD = $(LDADD)
testdouble_DEPENDENCIES = $(LIBAUDIOFILE)
am_testfloat_OBJECTS = testfloat.$(OBJEXT) TestUtilities.$(OBJEXT)
testfloat_OBJECTS = $(am_testfloat_OBJECTS)
testfloat_LDADD = $(LDADD)
testfloat_DEPENDENCIES = $(LIBAUDIOFILE)
am_testmarkers_OBJECTS = testmarkers.$(OBJEXT) TestUtilities.$(OBJEXT)
testmarkers_OBJECTS = $(am_testmarkers_OBJECTS)
testmarkers_LDADD = $(LDADD)
testmarkers_DEPENDENCIES = $(LIBAUDIOFILE)
am_twentyfour_OBJECTS = twentyfour.$(OBJEXT) TestUtilities.$(OBJEXT)
twentyfour_OBJECTS = $(am_twentyfour_OBJECTS)
twentyfour_LDADD = $(LDADD)
twentyfour_DEPENDENCIES = $(LIBAUDIOFILE)
am_twentyfour2_OBJECTS = twentyfour2.$(OBJEXT) TestUtilities.$(OBJEXT)
twentyfour2_OBJECTS = $(am_twentyfour2_OBJECTS)
twentyfour2_LDADD = $(LDADD)
twentyfour2_DEPENDENCIES = $(LIBAUDIOFILE)
am_writealaw_OBJECTS = writealaw.$(OBJEXT) TestUtilities.$(OBJEXT)
writealaw_OBJECTS = $(am_writealaw_OBJECTS)
writealaw_LDADD = $(LDADD)
writealaw_DEPENDENCIES = $(LIBAUDIOFILE)
am_writeraw_OBJECTS = writeraw.$(OBJEXT) TestUtilities.$(OBJEXT)
writeraw_OBJECTS = $(am_writeraw_OBJECTS)
writeraw_LDADD = $(LDADD)
writeraw_DEPENDENCIES = $(LIBAUDIOFILE)
am_writeulaw_OBJECTS = writeulaw.$(OBJEXT) TestUtilities.$(OBJEXT)
writeulaw_OBJECTS = $(am_writeulaw_OBJECTS)
writeulaw_LDADD = $(LDADD)
writeulaw_DEPENDENCIES = $(LIBAUDIOFILE)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(ADPCM_SOURCES) $(AES_SOURCES) $(ALAC_SOURCES) \
	$(ChannelMatrix_SOURCES) $(Error_SOURCES) $(FLAC_SOURCES) \
	$(FloatToInt_SOURCES) $(Instrument_SOURCES) \
	$(IntToFloat_SOURCES) $(InvalidCompressionFormat_SOURCES) \
	$(InvalidSampleFormat_SOURCES) $(Large_SOURCES) \
	$(Loop_SOURCES) $(Marker_SOURCES) $(Miscellaneous_SOURCES) \
	$(NeXT_SOURCES) $(PCMData_SOURCES) $(PCMMapping_SOURCES) \
	$(Pipe_SOURCES) $(Query_SOURCES) $(SampleFormat_SOURCES) \
	$(Seek_SOURCES) $(Sign_SOURCES) $(VirtualFile_SOURCES) \
	$(floatto24_SOURCES) instparamtest.c instparamwrite.c \
	$(printmarkers_SOURCES) query2.c $(sixteen_to_eight_SOURCES) \
	testaupv.c $(testchannelmatrix_SOURCES) $(testdouble_SOURCES) \
	$(testfloat_SOURCES) $(testmarkers_SOURCES) \
	$(twentyfour_SOURCES) $(twentyfour2_SOURCES) \
	$(writealaw_SOURCES) $(writeraw_SOURCES) $(writeulaw_SOURCES)
DIST_SOURCES = $(ADPCM_SOURCES) $(AES_SOURCES) $(ALAC_SOURCES) \
	$(ChannelMatrix_SOURCES) $(Error_SOURCES) $(FLAC_SOURCES) \
	$(FloatToInt_SOURCES) $(Instrument_SOURCES) \
	$(IntToFloat_SOURCES) $(InvalidCompressionFormat_SOURCES) \
	$(InvalidSampleFormat_SOURCES) $(Large_SOURCES) \
	$(Loop_SOURCES) $(Marker_SOURCES) $(Miscellaneous_SOURCES) \
	$(NeXT_SOURCES) $(PCMData_SOURCES) $(PCMMapping_SOURCES) \
	$(Pipe_SOURCES) $(Query_SOURCES) $(SampleFormat_SOURCES) \
	$(Seek_SOURCES) $(Sign_SOURCES) $(VirtualFile_SOURCES) \
	$(floatto24_SOURCES) instparamtest.c instparamwrite.c \
	$(printmarkers_SOURCES) query2.c $(sixteen_to_eight_SOURCES) \
	testaupv.c $(testchannelmatrix_SOURCES) $(testdouble_SOURCES) \
	$(testfloat_SOURCES) $(testmarkers_SOURCES) \
	$(twentyfour_SOURCES) $(twentyfour2_SOURCES) \
	$(writealaw_SOURCES) $(writeraw_SOURCES) $(writeulaw_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
A2X = @A2X@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ASCIIDOC = @ASCIIDOC@
AUDIOFILE_VERSION = @AUDIOFILE_VERSION@
AUDIOFILE_VERSION_INFO = @AUDIOFILE_VERSION_INFO@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COVERAGE_CFLAGS = @COVERAGE_CFLAGS@
COVERAGE_LIBS = @COVERAGE_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
FLAC_CFLAGS = @FLAC_CFLAGS@
FLAC_LIBS = @FLAC_LIBS@
GENHTML = @GENHTML@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LCOV = @LCOV@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEST_BIN = @TEST_BIN@
VALGRIND = @VALGRIND@
VERSION = @VERSION@
WERROR_CFLAGS = @WERROR_CFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
INCLUDES = -I$(top_srcdir)/libaudiofile -I$(top_srcdir)
@ENABLE_VALGRIND_TRUE@VALGRIND_FLAGS = --quiet --leak-check=full --show-reachable=yes --error-exitcode=1
@ENABLE_VALGRIND_TRUE@TESTS_ENVIRONMENT = $(top_builddir)/libtool --mode=execute $(VALGRIND) $(VALGRIND_FLAGS)
LIBAUDIOFILE = $(top_builddir)/libaudiofile/libaudiofile.la
LDADD = $(LIBAUDIOFILE)
DEPENDENCIES = $(LIBAUDIOFILE)
LIBGTEST = ../gtest/libgtest.la
ADPCM_SOURCES = ADPCM.cpp TestUtilities.cpp TestUtilities.h
ADPCM_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
AES_SOURCES = AES.cpp TestUtilities.cpp TestUtilities.h
AES_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
ALAC_SOURCES = ALAC.cpp Lossless.h TestUtilities.cpp TestUtilities.h
ALAC_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
ChannelMatrix_SOURCES = ChannelMatrix.cpp TestUtilities.cpp TestUtilities.h
ChannelMatrix_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Error_SOURCES = Error.cpp TestUtilities.cpp TestUtilities.h
Error_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
FLAC_SOURCES = FLAC.cpp Lossless.h TestUtilities.cpp TestUtilities.h
FLAC_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
FloatToInt_SOURCES = FloatToInt.cpp TestUtilities.cpp TestUtilities.h
FloatToInt_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Instrument_SOURCES = Instrument.cpp TestUtilities.cpp TestUtilities.h
Instrument_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
IntToFloat_SOURCES = IntToFloat.cpp TestUtilities.cpp TestUtilities.h
IntToFloat_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
InvalidCompressionFormat_SOURCES = InvalidCompressionFormat.cpp TestUtilities.cpp TestUtilities.h
InvalidCompressionFormat_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
InvalidSampleFormat_SOURCES = InvalidSampleFormat.cpp TestUtilities.cpp TestUtilities.h
InvalidSampleFormat_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Large_SOURCES = Large.cpp TestUtilities.cpp TestUtilities.h
Large_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Loop_SOURCES = Loop.cpp TestUtilities.cpp TestUtilities.h
Loop_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Marker_SOURCES = Marker.cpp TestUtilities.cpp TestUtilities.h
Marker_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Miscellaneous_SOURCES = Miscellaneous.cpp TestUtilities.cpp TestUtilities.h
Miscellaneous_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
NeXT_SOURCES = NeXT.cpp TestUtilities.cpp TestUtilities.h
NeXT_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
PCMData_SOURCES = PCMData.cpp TestUtilities.cpp TestUtilities.h
PCMData_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
PCMMapping_SOURCES = PCMMapping.cpp TestUtilities.cpp TestUtilities.h
PCMMapping_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Pipe_SOURCES = Pipe.cpp TestUtilities.cpp TestUtilities.h
Pipe_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Query_SOURCES = Query.cpp TestUtilities.cpp TestUtilities.h
Query_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
SampleFormat_SOURCES = SampleFormat.cpp TestUtilities.cpp TestUtilities.h
SampleFormat_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Seek_SOURCES = Seek.cpp TestUtilities.cpp TestUtilities.h
Seek_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
Sign_SOURCES = Sign.cpp TestUtilities.cpp TestUtilities.h
Sign_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
VirtualFile_SOURCES = VirtualFile.cpp TestUtilities.cpp TestUtilities.h
VirtualFile_LDADD = $(LIBGTEST) $(LIBAUDIOFILE)
floatto24_SOURCES = floatto24.c TestUtilities.cpp TestUtilities.h
printmarkers_SOURCES = printmarkers.c
printmarkers_LDADD = $(LIBAUDIOFILE) -lm
sixteen_to_eight_SOURCES = sixteen-to-eight.c TestUtilities.cpp TestUtilities.h
testchannelmatrix_SOURCES = testchannelmatrix.c TestUtilities.cpp TestUtilities.h
testdouble_SOURCES = testdouble.c TestUtilities.cpp TestUtilities.h
testfloat_SOURCES = testfloat.c TestUtilities.cpp TestUtilities.h
testmarkers_SOURCES = testmarkers.c TestUtilities.cpp TestUtilities.h
twentyfour_SOURCES = twentyfour.c TestUtilities.cpp TestUtilities.h
twentyfour2_SOURCES = twentyfour2.c TestUtilities.cpp TestUtilities.h
writealaw_SOURCES = writealaw.c TestUtilities.cpp TestUtilities.h
writeraw_SOURCES = writeraw.c TestUtilities.cpp TestUtilities.h
writeulaw_SOURCES = writeulaw.c TestUtilities.cpp TestUtilities.h
AM_CXXFLAGS = -fno-rtti -fno-exceptions -DGTEST_HAS_RTTI=0 -DGTEST_HAS_EXCEPTIONS=0
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

ADPCM$(EXEEXT): $(ADPCM_OBJECTS) $(ADPCM_DEPENDENCIES) $(EXTRA_ADPCM_DEPENDENCIES) 
	@rm -f ADPCM$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ADPCM_OBJECTS) $(ADPCM_LDADD) $(LIBS)

AES$(EXEEXT): $(AES_OBJECTS) $(AES_DEPENDENCIES) $(EXTRA_AES_DEPENDENCIES) 
	@rm -f AES$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(AES_OBJECTS) $(AES_LDADD) $(LIBS)

ALAC$(EXEEXT): $(ALAC_OBJECTS) $(ALAC_DEPENDENCIES) $(EXTRA_ALAC_DEPENDENCIES) 
	@rm -f ALAC$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ALAC_OBJECTS) $(ALAC_LDADD) $(LIBS)

ChannelMatrix$(EXEEXT): $(ChannelMatrix_OBJECTS) $(ChannelMatrix_DEPENDENCIES) $(EXTRA_ChannelMatrix_DEPENDENCIES) 
	@rm -f ChannelMatrix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ChannelMatrix_OBJECTS) $(ChannelMatrix_LDADD) $(LIBS)

Error$(EXEEXT): $(Error_OBJECTS) $(Error_DEPENDENCIES) $(EXTRA_Error_DEPENDENCIES) 
	@rm -f Error$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Error_OBJECTS) $(Error_LDADD) $(LIBS)

FLAC$(EXEEXT): $(FLAC_OBJECTS) $(FLAC_DEPENDENCIES) $(EXTRA_FLAC_DEPENDENCIES) 
	@rm -f FLAC$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(FLAC_OBJECTS) $(FLAC_LDADD) $(LIBS)

FloatToInt$(EXEEXT): $(FloatToInt_OBJECTS) $(FloatToInt_DEPENDENCIES) $(EXTRA_FloatToInt_DEPENDENCIES) 
	@rm -f FloatToInt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(FloatToInt_OBJECTS) $(FloatToInt_LDADD) $(LIBS)

Instrument$(EXEEXT): $(Instrument_OBJECTS) $(Instrument_DEPENDENCIES) $(EXTRA_Instrument_DEPENDENCIES) 
	@rm -f Instrument$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Instrument_OBJECTS) $(Instrument_LDADD) $(LIBS)

IntToFloat$(EXEEXT): $(IntToFloat_OBJECTS) $(IntToFloat_DEPENDENCIES) $(EXTRA_IntToFloat_DEPENDENCIES) 
	@rm -f IntToFloat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(IntToFloat_OBJECTS) $(IntToFloat_LDADD) $(LIBS)

InvalidCompressionFormat$(EXEEXT): $(InvalidCompressionFormat_OBJECTS) $(InvalidCompressionFormat_DEPENDENCIES) $(EXTRA_InvalidCompressionFormat_DEPENDENCIES) 
	@rm -f InvalidCompressionFormat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(InvalidCompressionFormat_OBJECTS) $(InvalidCompressionFormat_LDADD) $(LIBS)

InvalidSampleFormat$(EXEEXT): $(InvalidSampleFormat_OBJECTS) $(InvalidSampleFormat_DEPENDENCIES) $(EXTRA_InvalidSampleFormat_DEPENDENCIES) 
	@rm -f InvalidSampleFormat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(InvalidSampleFormat_OBJECTS) $(InvalidSampleFormat_LDADD) $(LIBS)

Large$(EXEEXT): $(Large_OBJECTS) $(Large_DEPENDENCIES) $(EXTRA_Large_DEPENDENCIES) 
	@rm -f Large$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Large_OBJECTS) $(Large_LDADD) $(LIBS)

Loop$(EXEEXT): $(Loop_OBJECTS) $(Loop_DEPENDENCIES) $(EXTRA_Loop_DEPENDENCIES) 
	@rm -f Loop$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Loop_OBJECTS) $(Loop_LDADD) $(LIBS)

Marker$(EXEEXT): $(Marker_OBJECTS) $(Marker_DEPENDENCIES) $(EXTRA_Marker_DEPENDENCIES) 
	@rm -f Marker$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Marker_OBJECTS) $(Marker_LDADD) $(LIBS)

Miscellaneous$(EXEEXT): $(Miscellaneous_OBJECTS) $(Miscellaneous_DEPENDENCIES) $(EXTRA_Miscellaneous_DEPENDENCIES) 
	@rm -f Miscellaneous$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Miscellaneous_OBJECTS) $(Miscellaneous_LDADD) $(LIBS)

NeXT$(EXEEXT): $(NeXT_OBJECTS) $(NeXT_DEPENDENCIES) $(EXTRA_NeXT_DEPENDENCIES) 
	@rm -f NeXT$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(NeXT_OBJECTS) $(NeXT_LDADD) $(LIBS)

PCMData$(EXEEXT): $(PCMData_OBJECTS) $(PCMData_DEPENDENCIES) $(EXTRA_PCMData_DEPENDENCIES) 
	@rm -f PCMData$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(PCMData_OBJECTS) $(PCMData_LDADD) $(LIBS)

PCMMapping$(EXEEXT): $(PCMMapping_OBJECTS) $(PCMMapping_DEPENDENCIES) $(EXTRA_PCMMapping_DEPENDENCIES) 
	@rm -f PCMMapping$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(PCMMapping_OBJECTS) $(PCMMapping_LDADD) $(LIBS)

Pipe$(EXEEXT): $(Pipe_OBJECTS) $(Pipe_DEPENDENCIES) $(EXTRA_Pipe_DEPENDENCIES) 
	@rm -f Pipe$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Pipe_OBJECTS) $(Pipe_LDADD) $(LIBS)

Query$(EXEEXT): $(Query_OBJECTS) $(Query_DEPENDENCIES) $(EXTRA_Query_DEPENDENCIES) 
	@rm -f Query$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Query_OBJECTS) $(Query_LDADD) $(LIBS)

SampleFormat$(EXEEXT): $(SampleFormat_OBJECTS) $(SampleFormat_DEPENDENCIES) $(EXTRA_SampleFormat_DEPENDENCIES) 
	@rm -f SampleFormat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SampleFormat_OBJECTS) $(SampleFormat_LDADD) $(LIBS)

Seek$(EXEEXT): $(Seek_OBJECTS) $(Seek_DEPENDENCIES) $(EXTRA_Seek_DEPENDENCIES) 
	@rm -f Seek$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Seek_OBJECTS) $(Seek_LDADD) $(LIBS)

Sign$(EXEEXT): $(Sign_OBJECTS) $(Sign_DEPENDENCIES) $(EXTRA_Sign_DEPENDENCIES) 
	@rm -f Sign$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Sign_OBJECTS) $(Sign_LDADD) $(LIBS)

VirtualFile$(EXEEXT): $(VirtualFile_OBJECTS) $(VirtualFile_DEPENDENCIES) $(EXTRA_VirtualFile_DEPENDENCIES) 
	@rm -f VirtualFile$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(VirtualFile_OBJECTS) $(VirtualFile_LDADD) $(LIBS)

floatto24$(EXEEXT): $(floatto24_OBJECTS) $(floatto24_DEPENDENCIES) $(EXTRA_floatto24_DEPENDENCIES) 
	@rm -f floatto24$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(floatto24_OBJECTS) $(floatto24_LDADD) $(LIBS)

instparamtest$(EXEEXT): $(instparamtest_OBJECTS) $(instparamtest_DEPENDENCIES) $(EXTRA_instparamtest_DEPENDENCIES) 
	@rm -f instparamtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(instparamtest_OBJECTS) $(instparamtest_LDADD) $(LIBS)

instparamwrite$(EXEEXT): $(instparamwrite_OBJECTS) $(instparamwrite_DEPENDENCIES) $(EXTRA_instparamwrite_DEPENDENCIES) 
	@rm -f instparamwrite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(instparamwrite_OBJECTS) $(instparamwrite_LDADD) $(LIBS)

printmarkers$(EXEEXT): $(printmarkers_OBJECTS) $(printmarkers_DEPENDENCIES) $(EXTRA_printmarkers_DEPENDENCIES) 
	@rm -f printmarkers$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(printmarkers_OBJECTS) $(printmarkers_LDADD) $(LIBS)

query2$(EXEEXT): $(query2_OBJECTS) $(query2_DEPENDENCIES) $(EXTRA_query2_DEPENDENCIES) 
	@rm -f query2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(query2_OBJECTS) $(query2_LDADD) $(LIBS)

sixteen-to-eight$(EXEEXT): $(sixteen_to_eight_OBJECTS) $(sixteen_to_eight_DEPENDENCIES) $(EXTRA_sixteen_to_eight_DEPENDENCIES) 
	@rm -f sixteen-to-eight$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sixteen_to_eight_OBJECTS) $(sixteen_to_eight_LDADD) $(LIBS)

testaupv$(EXEEXT): $(testaupv_OBJECTS) $(testaupv_DEPENDENCIES) $(EXTRA_testaupv_DEPENDENCIES) 
	@rm -f testaupv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(testaupv_OBJECTS) $(testaupv_LDADD) $(LIBS)

testchannelmatrix$(EXEEXT): $(testchannelmatrix_OBJECTS) $(testchannelmatrix_DEPENDENCIES) $(EXTRA_testchannelmatrix_DEPENDENCIES) 
	@rm -f testchannelmatrix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testchannelmatrix_OBJECTS) $(testchannelmatrix_LDADD) $(LIBS)

testdouble$(EXEEXT): $(testdouble_OBJECTS) $(testdouble_DEPENDENCIES) $(EXTRA_testdouble_DEPENDENCIES) 
	@rm -f testdouble$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testdouble_OBJECTS) $(testdouble_LDADD) $(LIBS)

testfloat$(EXEEXT): $(testfloat_OBJECTS) $(testfloat_DEPENDENCIES) $(EXTRA_testfloat_DEPENDENCIES) 
	@rm -f testfloat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfloat_OBJECTS) $(testfloat_LDADD) $(LIBS)

testmarkers$(EXEEXT): $(testmarkers_OBJECTS) $(testmarkers_DEPENDENCIES) $(EXTRA_testmarkers_DEPENDENCIES) 
	@rm -f testmarkers$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testmarkers_OBJECTS) $(testmarkers_LDADD) $(LIBS)

twentyfour$(EXEEXT): $(twentyfour_OBJECTS) $(twentyfour_DEPENDENCIES) $(EXTRA_twentyfour_DEPENDENCIES) 
	@rm -f twentyfour$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(twentyfour_OBJECTS) $(twentyfour_LDADD) $(LIBS)

twentyfour2$(EXEEXT): $(twentyfour2_OBJECTS) $(twentyfour2_DEPENDENCIES) $(EXTRA_twentyfour2_DEPENDENCIES) 
	@rm -f twentyfour2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(twentyfour2_OBJECTS) $(twentyfour2_LDADD) $(LIBS)

writealaw$(EXEEXT): $(writealaw_OBJECTS) $(writealaw_DEPENDENCIES) $(EXTRA_writealaw_DEPENDENCIES) 
	@rm -f writealaw$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(writealaw_OBJECTS) $(writealaw_LDADD) $(LIBS)

writeraw$(EXEEXT): $(writeraw_OBJECTS) $(writeraw_DEPENDENCIES) $(EXTRA_writeraw_DEPENDENCIES) 
	@rm -f writeraw$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(writeraw_OBJECTS) $(writeraw_LDADD) $(LIBS)

writeulaw$(EXEEXT): $(writeulaw_OBJECTS) $(writeulaw_DEPENDENCIES) $(EXTRA_writeulaw_DEPENDENCIES) 
	@rm -f writeulaw$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(writeulaw_OBJECTS) $(writeulaw_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ADPCM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AES.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ALAC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChannelMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FLAC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FloatToInt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Instrument.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IntToFloat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvalidCompressionFormat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InvalidSampleFormat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Large.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Marker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Miscellaneous.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NeXT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PCMData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PCMMapping.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Pipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Query.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SampleFormat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Seek.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Sign.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TestUtilities.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VirtualFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floatto24.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instparamtest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/instparamwrite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/printmarkers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/query2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sixteen-to-eight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testaupv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testchannelmatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testdouble.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testfloat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testmarkers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twentyfour.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/twentyfour2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/writealaw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/writeraw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/writeulaw.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
ADPCM.log: ADPCM$(EXEEXT)
	@p='ADPCM$(EXEEXT)'; \
	b='ADPCM'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
AES.log: AES$(EXEEXT)
	@p='AES$(EXEEXT)'; \
	b='AES'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ALAC.log: ALAC$(EXEEXT)
	@p='ALAC$(EXEEXT)'; \
	b='ALAC'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ChannelMatrix.log: ChannelMatrix$(EXEEXT)
	@p='ChannelMatrix$(EXEEXT)'; \
	b='ChannelMatrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Error.log: Error$(EXEEXT)
	@p='Error$(EXEEXT)'; \
	b='Error'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
FloatToInt.log: FloatToInt$(EXEEXT)
	@p='FloatToInt$(EXEEXT)'; \
	b='FloatToInt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Instrument.log: Instrument$(EXEEXT)
	@p='Instrument$(EXEEXT)'; \
	b='Instrument'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
IntToFloat.log: IntToFloat$(EXEEXT)
	@p='IntToFloat$(EXEEXT)'; \
	b='IntToFloat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
InvalidCompressionFormat.log: InvalidCompressionFormat$(EXEEXT)
	@p='InvalidCompressionFormat$(EXEEXT)'; \
	b='InvalidCompressionFormat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
InvalidSampleFormat.log: InvalidSampleFormat$(EXEEXT)
	@p='InvalidSampleFormat$(EXEEXT)'; \
	b='InvalidSampleFormat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Large.log: Large$(EXEEXT)
	@p='Large$(EXEEXT)'; \
	b='Large'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Loop.log: Loop$(EXEEXT)
	@p='Loop$(EXEEXT)'; \
	b='Loop'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Marker.log: Marker$(EXEEXT)
	@p='Marker$(EXEEXT)'; \
	b='Marker'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Miscellaneous.log: Miscellaneous$(EXEEXT)
	@p='Miscellaneous$(EXEEXT)'; \
	b='Miscellaneous'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
NeXT.log: NeXT$(EXEEXT)
	@p='NeXT$(EXEEXT)'; \
	b='NeXT'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
PCMData.log: PCMData$(EXEEXT)
	@p='PCMData$(EXEEXT)'; \
	b='PCMData'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
PCMMapping.log: PCMMapping$(EXEEXT)
	@p='PCMMapping$(EXEEXT)'; \
	b='PCMMapping'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Pipe.log: Pipe$(EXEEXT)
	@p='Pipe$(EXEEXT)'; \
	b='Pipe'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Query.log: Query$(EXEEXT)
	@p='Query$(EXEEXT)'; \
	b='Query'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
SampleFormat.log: SampleFormat$(EXEEXT)
	@p='SampleFormat$(EXEEXT)'; \
	b='SampleFormat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Seek.log: Seek$(EXEEXT)
	@p='Seek$(EXEEXT)'; \
	b='Seek'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Sign.log: Sign$(EXEEXT)
	@p='Sign$(EXEEXT)'; \
	b='Sign'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
VirtualFile.log: VirtualFile$(EXEEXT)
	@p='VirtualFile$(EXEEXT)'; \
	b='VirtualFile'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
floatto24.log: floatto24$(EXEEXT)
	@p='floatto24$(EXEEXT)'; \
	b='floatto24'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
query2.log: query2$(EXEEXT)
	@p='query2$(EXEEXT)'; \
	b='query2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sixteen-to-eight.log: sixteen-to-eight$(EXEEXT)
	@p='sixteen-to-eight$(EXEEXT)'; \
	b='sixteen-to-eight'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testchannelmatrix.log: testchannelmatrix$(EXEEXT)
	@p='testchannelmatrix$(EXEEXT)'; \
	b='testchannelmatrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testdouble.log: testdouble$(EXEEXT)
	@p='testdouble$(EXEEXT)'; \
	b='testdouble'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testfloat.log: testfloat$(EXEEXT)
	@p='testfloat$(EXEEXT)'; \
	b='testfloat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
testmarkers.log: testmarkers$(EXEEXT)
	@p='testmarkers$(EXEEXT)'; \
	b='testmarkers'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
twentyfour.log: twentyfour$(EXEEXT)
	@p='twentyfour$(EXEEXT)'; \
	b='twentyfour'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
twentyfour2.log: twentyfour2$(EXEEXT)
	@p='twentyfour2$(EXEEXT)'; \
	b='twentyfour2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
writealaw.log: writealaw$(EXEEXT)
	@p='writealaw$(EXEEXT)'; \
	b='writealaw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
writeraw.log: writeraw$(EXEEXT)
	@p='writeraw$(EXEEXT)'; \
	b='writeraw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
writeulaw.log: writeulaw$(EXEEXT)
	@p='writeulaw$(EXEEXT)'; \
	b='writeulaw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
FLAC.log: FLAC$(EXEEXT)
	@p='FLAC$(EXEEXT)'; \
	b='FLAC'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
